JSON
1.	Создать внешний репозиторий c названием JSON. Repositaries -> New (на сайте GitHub)
2.	Клонировать репозиторий JSON на локальный компьютер. git clone link(ssh)
3.	Внутри локального JSON создать файл “new.json”. touch new.json
4.	Добавить файл под гит. git add new.json
5.	Закоммитить файл. git commit -m "add file new.json"
6.	Отправить файл на внешний GitHub репозиторий. git push
7.	Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. vim new.json, i - для написания текста, Ctrl+C, потом :wq - для сохранения изменений
8.	Отправить изменения на внешний репозиторий. git commit -am "changes to new.json", git push
9.	Создать файл preferences.json. touch preferences.json
10.	В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. vim preferences.json, i - для написания текста, Ctrl+C, потом :wq - для сохранения изменений
11.	Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON. touch skills.json. vim skills.json, i - для написания текста, Ctrl+C, потом :wq - для сохранения изменений
12.	Отправить сразу 2 файла на внешний репозиторий. git add . / git commit -m "add two files"/ git push
13.	На веб интерфейсе создать файл bug_report.json. Add file -> bug_report.json
14.	Сделать Commit changes (сохранить) изменения на веб интерфейсе. Commit new file
15.	На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. Edit file -> Commit changes
16.	Сделать Commit changes (сохранить) изменения на веб интерфейсе. commit changes
17.	Синхронизировать внешний и локальный репозиторий JSON. git fetch. git pull

XML
18.	Создать внешний репозиторий c названием XML. Repositaries -> New (на сайте GitHub)
19.	Клонировать репозиторий XML на локальный компьютер. git clone link(ssh)
20.	Внутри локального XML создать файл “new.xml”. touch new.xml
21.	Добавить файл под гит. git add new.xml
22.	Закоммитить файл. git commit -m "add new file new.xml"
23.	Отправить файл на внешний GitHub репозиторий. git push
24.	Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. vim new.xml, i - для написания текста, Ctrl+C, потом :wq - для сохранения изменений
25.	Отправить изменения на внешний репозиторий. git add / git commit -m "add new.xml file"/ git push
26.	Создать файл preferences.xml. touch preferences.xml
27.	В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. vim preferences.xml, i - для написания текста, Ctrl+C, потом :wq - для сохранения изменений
28.	Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML. touch skills.xml / vim skills.xml, i - для написания текста, Ctrl+C, потом :wq - для сохранения изменений
29.	Сделать коммит в одну строку. git add . / git commit -m "add 2 files"
30.	Отправить сразу 2 файла на внешний репозиторий. git push
31.	На веб интерфейсе создать файл bug_report.xml. Add file -> Create new file
32.	Сделать Commit changes (сохранить) изменения на веб интерфейсе. Commit new file
33.	На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. Edit file -> Commit changes
34.	Сделать Commit changes (сохранить) изменения на веб интерфейсе. Commit changes
35.	Синхронизировать внешний и локальный репозиторий XML. git fetch, git pull

TXT
 1. Создать внешний репозиторий c названием TXT. Repositaries -> New (на сайте GitHub)
 2. Клонировать репозиторий TXT на локальный компьютер. git clone link(ssh)
 3. Внутри локального TXT создать файл “new.txt”. touch new.txt
 4. Добавить файл под гит. git add new.txt
 5. Закоммитить файл. git commit -m "add new.txt file"
 6. Отправить файл на внешний GitHub репозиторий. git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.vim new.txt, i - для написания текста, Ctrl+C, потом :wq - для сохранения изменений
 8. Отправить изменения на внешний репозиторий. git push
 9. Создать файл preferences.txt. touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. vim preferences.txt, i - для написания текста, Ctrl+C, потом :wq - для сохранения изменений
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT. touch skills.txt. vim skills.txt, i - для написания текста, Ctrl+C, потом :wq - для сохранения изменений
 12. Сделать коммит в одну строку. git add ./ git commit -m "add 2 new files"
 13. Отправить сразу 2 файла на внешний репозиторий. git push
 14. На веб интерфейсе создать файл bug_report.txt. Add file -> Create new file
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.Commit new file
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.  Edit file -> Commit changes
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. Commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT. git fetch, git pull
